// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/source.proto

package proto

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Req struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Kind                 string   `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Body                 string   `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Req) Reset()         { *m = Req{} }
func (m *Req) String() string { return proto.CompactTextString(m) }
func (*Req) ProtoMessage()    {}
func (*Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2584450bc7b1eeb, []int{0}
}

func (m *Req) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Req.Unmarshal(m, b)
}
func (m *Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Req.Marshal(b, m, deterministic)
}
func (m *Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Req.Merge(m, src)
}
func (m *Req) XXX_Size() int {
	return xxx_messageInfo_Req.Size(m)
}
func (m *Req) XXX_DiscardUnknown() {
	xxx_messageInfo_Req.DiscardUnknown(m)
}

var xxx_messageInfo_Req proto.InternalMessageInfo

func (m *Req) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Req) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Req) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

type Resp struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Body                 string   `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Resp) Reset()         { *m = Resp{} }
func (m *Resp) String() string { return proto.CompactTextString(m) }
func (*Resp) ProtoMessage()    {}
func (*Resp) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2584450bc7b1eeb, []int{1}
}

func (m *Resp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resp.Unmarshal(m, b)
}
func (m *Resp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resp.Marshal(b, m, deterministic)
}
func (m *Resp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resp.Merge(m, src)
}
func (m *Resp) XXX_Size() int {
	return xxx_messageInfo_Resp.Size(m)
}
func (m *Resp) XXX_DiscardUnknown() {
	xxx_messageInfo_Resp.DiscardUnknown(m)
}

var xxx_messageInfo_Resp proto.InternalMessageInfo

func (m *Resp) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Resp) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func init() {
	proto.RegisterType((*Req)(nil), "proto.Req")
	proto.RegisterType((*Resp)(nil), "proto.Resp")
}

func init() { proto.RegisterFile("proto/source.proto", fileDescriptor_f2584450bc7b1eeb) }

var fileDescriptor_f2584450bc7b1eeb = []byte{
	// 153 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2a, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x2f, 0xce, 0x2f, 0x2d, 0x4a, 0x4e, 0xd5, 0x03, 0x73, 0x84, 0x58, 0xc1, 0x94, 0x92,
	0x23, 0x17, 0x73, 0x50, 0x6a, 0xa1, 0x90, 0x10, 0x17, 0x4b, 0x69, 0x69, 0x66, 0x8a, 0x04, 0xa3,
	0x02, 0xa3, 0x06, 0x67, 0x10, 0x98, 0x0d, 0x12, 0xcb, 0xce, 0xcc, 0x4b, 0x91, 0x60, 0x82, 0x88,
	0x81, 0xd8, 0x20, 0xb1, 0xa4, 0xfc, 0x94, 0x4a, 0x09, 0x66, 0x88, 0x18, 0x88, 0xad, 0xa4, 0xc7,
	0xc5, 0x12, 0x94, 0x5a, 0x5c, 0x00, 0x92, 0x4b, 0xce, 0x4f, 0x49, 0x85, 0x99, 0x01, 0x62, 0xc3,
	0xd5, 0x33, 0x21, 0xd4, 0x1b, 0x69, 0x73, 0x31, 0xbb, 0xe7, 0x97, 0x0a, 0xa9, 0x70, 0xb1, 0x3b,
	0x67, 0xa4, 0x26, 0x67, 0x7b, 0xe6, 0x09, 0x71, 0x41, 0xdc, 0xa4, 0x17, 0x94, 0x5a, 0x28, 0xc5,
	0x0d, 0x67, 0x17, 0x17, 0x28, 0x31, 0x24, 0xb1, 0x81, 0x79, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x6a, 0xb0, 0x3c, 0x0d, 0xc3, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GouClient is the client API for Gou service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GouClient interface {
	CheckIn(ctx context.Context, in *Req, opts ...grpc.CallOption) (*Resp, error)
}

type gouClient struct {
	cc *grpc.ClientConn
}

func NewGouClient(cc *grpc.ClientConn) GouClient {
	return &gouClient{cc}
}

func (c *gouClient) CheckIn(ctx context.Context, in *Req, opts ...grpc.CallOption) (*Resp, error) {
	out := new(Resp)
	err := c.cc.Invoke(ctx, "/proto.Gou/CheckIn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GouServer is the server API for Gou service.
type GouServer interface {
	CheckIn(context.Context, *Req) (*Resp, error)
}

// UnimplementedGouServer can be embedded to have forward compatible implementations.
type UnimplementedGouServer struct {
}

func (*UnimplementedGouServer) CheckIn(ctx context.Context, req *Req) (*Resp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckIn not implemented")
}

func RegisterGouServer(s *grpc.Server, srv GouServer) {
	s.RegisterService(&_Gou_serviceDesc, srv)
}

func _Gou_CheckIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GouServer).CheckIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Gou/CheckIn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GouServer).CheckIn(ctx, req.(*Req))
	}
	return interceptor(ctx, in, info, handler)
}

var _Gou_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Gou",
	HandlerType: (*GouServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CheckIn",
			Handler:    _Gou_CheckIn_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/source.proto",
}
